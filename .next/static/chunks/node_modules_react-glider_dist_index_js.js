/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_react-glider_dist_index_js"],{

/***/ "./node_modules/glider-js/glider.js":
/*!******************************************!*\
  !*** ./node_modules/glider-js/glider.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/* @preserve\n    _____ __ _     __                _\n   / ___// /(_)___/ /___  ____      (_)___\n  / (_ // // // _  // -_)/ __/_    / /(_-<\n  \\___//_//_/ \\_,_/ \\__//_/  (_)__/ //___/\n                              |___/\n\n  Version: 1.6.6\n  Author: Nick Piscitelli (pickykneee)\n  Website: https://nickpiscitelli.com\n  Documentation: http://nickpiscitelli.github.io/Glider.js\n  License: MIT License\n  Release Date: October 25th, 2018\n\n*/\n\n/* global define */\n\n(function (factory) {\n   true\n    ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n    : 0\n})(function () {\n  ('use strict') // eslint-disable-line no-unused-expressions\n\n  /* globals window:true */\n  var _window = typeof window !== 'undefined' ? window : this\n\n  var Glider = (_window.Glider = function (element, settings) {\n    var _ = this\n\n    if (element._glider) return element._glider\n\n    _.ele = element\n    _.ele.classList.add('glider')\n\n    // expose glider object to its DOM element\n    _.ele._glider = _\n\n    // merge user setting with defaults\n    _.opt = Object.assign(\n      {},\n      {\n        slidesToScroll: 1,\n        slidesToShow: 1,\n        resizeLock: true,\n        duration: 0.5,\n        // easeInQuad\n        easing: function (x, t, b, c, d) {\n          return c * (t /= d) * t + b\n        }\n      },\n      settings\n    )\n\n    // set defaults\n    _.animate_id = _.page = _.slide = 0\n    _.arrows = {}\n\n    // preserve original options to\n    // extend breakpoint settings\n    _._opt = _.opt\n\n    if (_.opt.skipTrack) {\n      // first and only child is the track\n      _.track = _.ele.children[0]\n    } else {\n      // create track and wrap slides\n      _.track = document.createElement('div')\n      _.ele.appendChild(_.track)\n      while (_.ele.children.length !== 1) {\n        _.track.appendChild(_.ele.children[0])\n      }\n    }\n\n    _.track.classList.add('glider-track')\n\n    // start glider\n    _.init()\n\n    // set events\n    _.resize = _.init.bind(_, true)\n    _.event(_.ele, 'add', {\n      scroll: _.updateControls.bind(_)\n    })\n    _.event(_window, 'add', {\n      resize: _.resize\n    })\n  })\n\n  var gliderPrototype = Glider.prototype\n  gliderPrototype.init = function (refresh, paging) {\n    var _ = this\n\n    var width = 0\n\n    var height = 0\n\n    _.slides = _.track.children;\n\n    [].forEach.call(_.slides, function (_) {\n      _.classList.add('glider-slide')\n    })\n\n    _.containerWidth = _.ele.clientWidth\n\n    var breakpointChanged = _.settingsBreakpoint()\n    if (!paging) paging = breakpointChanged\n\n    if (_.opt.slidesToShow === 'auto' || _.opt._autoSlide) {\n      var slideCount = _.containerWidth / _.opt.itemWidth\n\n      _.opt._autoSlide = _.opt.slidesToShow = _.opt.exactWidth\n        ? slideCount\n        : Math.floor(slideCount)\n    }\n    if (_.opt.slidesToScroll === 'auto') {\n      _.opt.slidesToScroll = Math.floor(_.opt.slidesToShow)\n    }\n\n    _.itemWidth = _.opt.exactWidth\n      ? _.opt.itemWidth\n      : _.containerWidth / _.opt.slidesToShow;\n\n    // set slide dimensions\n    [].forEach.call(_.slides, function (__) {\n      __.style.height = 'auto'\n      __.style.width = _.itemWidth + 'px'\n      width += _.itemWidth\n      height = Math.max(__.offsetHeight, height)\n    })\n\n    _.track.style.width = width + 'px'\n    _.trackWidth = width\n\n    _.opt.resizeLock && _.scrollTo(_.slide * _.itemWidth, 0)\n\n    if (breakpointChanged || paging) {\n      _.bindArrows()\n      _.buildDots()\n      _.bindDrag()\n    }\n\n    _.updateControls()\n\n    _.emit(refresh ? 'refresh ' : 'loaded')\n  }\n\n  gliderPrototype.bindDrag = function () {\n    var _ = this\n    _.mouse = _.mouse || _.handleMouse.bind(_)\n\n    var mouseup = function () {\n      _.mouseDown = undefined\n      _.ele.classList.remove('drag')\n    }\n\n    var events = {\n      mouseup: mouseup,\n      mouseleave: mouseup,\n      mousedown: function (e) {\n        _.mouseDown = e.clientX\n        _.ele.classList.add('drag')\n      },\n      mousemove: _.mouse\n    }\n\n    _.ele.classList.toggle('draggable', _.opt.draggable === true)\n    _.event(_.ele, 'remove', events)\n    if (_.opt.draggable) _.event(_.ele, 'add', events)\n  }\n\n  gliderPrototype.buildDots = function () {\n    var _ = this\n\n    if (!_.opt.dots) {\n      if (_.dots) _.dots.innerHTML = ''\n      return\n    }\n\n    if (typeof _.opt.dots === 'string') {\n      _.dots = document.querySelector(_.opt.dots)\n    } else _.dots = _.opt.dots\n    if (!_.dots) return\n\n    _.dots.innerHTML = ''\n    _.dots.className = 'glider-dots'\n\n    for (var i = 0; i < Math.ceil(_.slides.length / _.opt.slidesToShow); ++i) {\n      var dot = document.createElement('button')\n      dot.dataset.index = i\n      dot.setAttribute('aria-label', 'Page ' + (i + 1))\n      dot.className = 'glider-dot ' + (i ? '' : 'active')\n      _.event(dot, 'add', {\n        click: _.scrollItem.bind(_, i, true)\n      })\n      _.dots.appendChild(dot)\n    }\n  }\n\n  gliderPrototype.bindArrows = function () {\n    var _ = this\n    if (!_.opt.arrows) {\n      Object.keys(_.arrows).forEach(function (direction) {\n        var element = _.arrows[direction]\n        _.event(element, 'remove', { click: element._func })\n      })\n      return\n    }\n    ['prev', 'next'].forEach(function (direction) {\n      var arrow = _.opt.arrows[direction]\n      if (arrow) {\n        if (typeof arrow === 'string') arrow = document.querySelector(arrow)\n        arrow._func = arrow._func || _.scrollItem.bind(_, direction)\n        _.event(arrow, 'remove', {\n          click: arrow._func\n        })\n        _.event(arrow, 'add', {\n          click: arrow._func\n        })\n        _.arrows[direction] = arrow\n      }\n    })\n  }\n\n  gliderPrototype.updateControls = function (event) {\n    var _ = this\n\n    if (event && !_.opt.scrollPropagate) {\n      event.stopPropagation()\n    }\n\n    var disableArrows = _.containerWidth >= _.trackWidth\n\n    if (!_.opt.rewind) {\n      if (_.arrows.prev) {\n        _.arrows.prev.classList.toggle(\n          'disabled',\n          _.ele.scrollLeft <= 0 || disableArrows\n        )\n      }\n      if (_.arrows.next) {\n        _.arrows.next.classList.toggle(\n          'disabled',\n          _.ele.scrollLeft + _.containerWidth >= Math.floor(_.trackWidth) ||\n            disableArrows\n        )\n      }\n    }\n\n    _.slide = Math.round(_.ele.scrollLeft / _.itemWidth)\n    _.page = Math.round(_.ele.scrollLeft / _.containerWidth)\n\n    var middle = _.slide + Math.floor(Math.floor(_.opt.slidesToShow) / 2)\n\n    var extraMiddle = Math.floor(_.opt.slidesToShow) % 2 ? 0 : middle + 1\n    if (Math.floor(_.opt.slidesToShow) === 1) {\n      extraMiddle = 0\n    }\n\n    // the last page may be less than one half of a normal page width so\n    // the page is rounded down. when at the end, force the page to turn\n    if (_.ele.scrollLeft + _.containerWidth >= Math.floor(_.trackWidth)) {\n      _.page = _.dots ? _.dots.children.length - 1 : 0\n    }\n\n    [].forEach.call(_.slides, function (slide, index) {\n      var slideClasses = slide.classList\n\n      var wasVisible = slideClasses.contains('visible')\n\n      var start = _.ele.scrollLeft\n\n      var end = _.ele.scrollLeft + _.containerWidth\n\n      var itemStart = _.itemWidth * index\n\n      var itemEnd = itemStart + _.itemWidth;\n\n      [].forEach.call(slideClasses, function (className) {\n        /^left|right/.test(className) && slideClasses.remove(className)\n      })\n      slideClasses.toggle('active', _.slide === index)\n      if (middle === index || (extraMiddle && extraMiddle === index)) {\n        slideClasses.add('center')\n      } else {\n        slideClasses.remove('center')\n        slideClasses.add(\n          [\n            index < middle ? 'left' : 'right',\n            Math.abs(index - (index < middle ? middle : extraMiddle || middle))\n          ].join('-')\n        )\n      }\n\n      var isVisible =\n        Math.ceil(itemStart) >= start && Math.ceil(itemEnd) <= end\n      slideClasses.toggle('visible', isVisible)\n      if (isVisible !== wasVisible) {\n        _.emit('slide-' + (isVisible ? 'visible' : 'hidden'), {\n          slide: index\n        })\n      }\n    })\n    if (_.dots) {\n      [].forEach.call(_.dots.children, function (dot, index) {\n        dot.classList.toggle('active', _.page === index)\n      })\n    }\n\n    if (event && _.opt.scrollLock) {\n      clearTimeout(_.scrollLock)\n      _.scrollLock = setTimeout(function () {\n        clearTimeout(_.scrollLock)\n        if ((_.ele.scrollLeft / _.itemWidth) % 1) {\n          _.scrollItem(_.round(_.ele.scrollLeft / _.itemWidth))\n        }\n      }, _.opt.scrollLockDelay || 250)\n    }\n  }\n\n  gliderPrototype.scrollItem = function (slide, dot, e) {\n    if (e) e.preventDefault()\n\n    var _ = this\n\n    var originalSlide = slide\n    ++_.animate_id\n\n    if (dot === true) {\n      slide = slide * _.containerWidth\n      slide = Math.round(slide / _.itemWidth) * _.itemWidth\n    } else {\n      if (typeof slide === 'string') {\n        var backwards = slide === 'prev'\n\n        // use precise location if fractional slides are on\n        if (_.opt.slidesToScroll % 1 || _.opt.slidesToShow % 1) {\n          slide = _.round(_.ele.scrollLeft / _.itemWidth)\n        } else {\n          slide = _.slide\n        }\n\n        if (backwards) slide -= _.opt.slidesToScroll\n        else slide += _.opt.slidesToScroll\n\n        if (_.opt.rewind) {\n          var scrollLeft = _.ele.scrollLeft\n          slide =\n            backwards && !scrollLeft\n              ? _.slides.length\n              : !backwards &&\n                scrollLeft + _.containerWidth >= Math.floor(_.trackWidth)\n                ? 0\n                : slide\n        }\n      }\n\n      slide = Math.max(Math.min(slide, _.slides.length), 0)\n\n      _.slide = slide\n      slide = _.itemWidth * slide\n    }\n\n    _.scrollTo(\n      slide,\n      _.opt.duration * Math.abs(_.ele.scrollLeft - slide),\n      function () {\n        _.updateControls()\n        _.emit('animated', {\n          value: originalSlide,\n          type:\n            typeof originalSlide === 'string' ? 'arrow' : dot ? 'dot' : 'slide'\n        })\n      }\n    )\n\n    return false\n  }\n\n  gliderPrototype.settingsBreakpoint = function () {\n    var _ = this\n\n    var resp = _._opt.responsive\n\n    if (resp) {\n      // Sort the breakpoints in mobile first order\n      resp.sort(function (a, b) {\n        return b.breakpoint - a.breakpoint\n      })\n\n      for (var i = 0; i < resp.length; ++i) {\n        var size = resp[i]\n        if (_window.innerWidth >= size.breakpoint) {\n          if (_.breakpoint !== size.breakpoint) {\n            _.opt = Object.assign({}, _._opt, size.settings)\n            _.breakpoint = size.breakpoint\n            return true\n          }\n          return false\n        }\n      }\n    }\n    // set back to defaults in case they were overriden\n    var breakpointChanged = _.breakpoint !== 0\n    _.opt = Object.assign({}, _._opt)\n    _.breakpoint = 0\n    return breakpointChanged\n  }\n\n  gliderPrototype.scrollTo = function (scrollTarget, scrollDuration, callback) {\n    var _ = this\n\n    var start = new Date().getTime()\n\n    var animateIndex = _.animate_id\n\n    var animate = function () {\n      var now = new Date().getTime() - start\n      _.ele.scrollLeft =\n        _.ele.scrollLeft +\n        (scrollTarget - _.ele.scrollLeft) *\n          _.opt.easing(0, now, 0, 1, scrollDuration)\n      if (now < scrollDuration && animateIndex === _.animate_id) {\n        _window.requestAnimationFrame(animate)\n      } else {\n        _.ele.scrollLeft = scrollTarget\n        callback && callback.call(_)\n      }\n    }\n\n    _window.requestAnimationFrame(animate)\n  }\n\n  gliderPrototype.removeItem = function (index) {\n    var _ = this\n\n    if (_.slides.length) {\n      _.track.removeChild(_.slides[index])\n      _.refresh(true)\n      _.emit('remove')\n    }\n  }\n\n  gliderPrototype.addItem = function (ele) {\n    var _ = this\n\n    _.track.appendChild(ele)\n    _.refresh(true)\n    _.emit('add')\n  }\n\n  gliderPrototype.handleMouse = function (e) {\n    var _ = this\n    if (_.mouseDown) {\n      _.ele.scrollLeft +=\n        (_.mouseDown - e.clientX) * (_.opt.dragVelocity || 3.3)\n      _.mouseDown = e.clientX\n    }\n  }\n\n  // used to round to the nearest 0.XX fraction\n  gliderPrototype.round = function (double) {\n    var _ = this\n    var step = _.opt.slidesToScroll % 1 || 1\n    var inv = 1.0 / step\n    return Math.round(double * inv) / inv\n  }\n\n  gliderPrototype.refresh = function (paging) {\n    var _ = this\n    _.init(true, paging)\n  }\n\n  gliderPrototype.setOption = function (opt, global) {\n    var _ = this\n\n    if (_.breakpoint && !global) {\n      _._opt.responsive.forEach(function (v) {\n        if (v.breakpoint === _.breakpoint) {\n          v.settings = Object.assign({}, v.settings, opt)\n        }\n      })\n    } else {\n      _._opt = Object.assign({}, _._opt, opt)\n    }\n\n    _.breakpoint = 0\n    _.settingsBreakpoint()\n  }\n\n  gliderPrototype.destroy = function () {\n    var _ = this\n\n    var replace = _.ele.cloneNode(true)\n\n    var clear = function (ele) {\n      ele.removeAttribute('style');\n      [].forEach.call(ele.classList, function (className) {\n        /^glider/.test(className) && ele.classList.remove(className)\n      })\n    }\n    // remove track\n    replace.children[0].outerHTML = replace.children[0].innerHTML\n    clear(replace);\n    [].forEach.call(replace.getElementsByTagName('*'), clear)\n    _.ele.parentNode.replaceChild(replace, _.ele)\n    _.event(_window, 'remove', {\n      resize: _.resize\n    })\n    _.emit('destroy')\n  }\n\n  gliderPrototype.emit = function (name, arg) {\n    var _ = this\n\n    var e = new _window.CustomEvent('glider-' + name, {\n      bubbles: !_.opt.eventPropagate,\n      detail: arg\n    })\n    _.ele.dispatchEvent(e)\n  }\n\n  gliderPrototype.event = function (ele, type, args) {\n    var eventHandler = ele[type + 'EventListener'].bind(ele)\n    Object.keys(args).forEach(function (k) {\n      eventHandler(k, args[k])\n    })\n  }\n\n  return Glider\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/glider-js/glider.js\n"));

/***/ }),

/***/ "./node_modules/react-glider/dist/index.js":
/*!*************************************************!*\
  !*** ./node_modules/react-glider/dist/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar React = __importStar(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n// tslint:disable-next-line\n__webpack_require__(/*! glider-js */ \"./node_modules/glider-js/glider.js\");\nvar GliderComponent = React.forwardRef(function (props, ref) {\n    var innerRef = React.useRef(null);\n    var gliderRef = React.useRef();\n    var makeGliderOptions = function () { return (__assign(__assign({}, props), { arrows: (props.hasArrows && {\n            next: (props.arrows && props.arrows.next && props.arrows.next) ||\n                '.glider-next',\n            prev: (props.arrows && props.arrows.prev && props.arrows.prev) ||\n                '.glider-prev',\n        }) ||\n            undefined, dots: (props.hasDots && props.dots && props.dots) || '#dots' || 0 })); };\n    // On mount initialize the glider and hook up events\n    React.useLayoutEffect(function () {\n        if (!innerRef.current) {\n            return;\n        }\n        // @ts-ignore\n        var glider = new Glider(innerRef.current, makeGliderOptions());\n        gliderRef.current = glider;\n        var addEventListener = function (event, fn) {\n            if (typeof fn === 'function' && innerRef.current) {\n                innerRef.current.addEventListener(event, fn);\n            }\n        };\n        addEventListener('glider-slide-visible', props.onSlideVisible);\n        addEventListener('glider-loaded', props.onLoad);\n        addEventListener('glider-animated', props.onAnimated);\n        addEventListener('glider-remove', props.onRemove);\n        addEventListener('glider-refresh', props.onRefresh);\n        addEventListener('glider-add', props.onAdd);\n        addEventListener('glider-destroy', props.onDestroy);\n        addEventListener('glider-slide-hidden', props.onSlideHidden);\n        if (props.scrollToSlide) {\n            glider.scrollItem(props.scrollToSlide - 1);\n        }\n        else if (props.scrollToPage) {\n            glider.scrollItem(props.scrollToPage - 1, true);\n        }\n        return function () {\n            var removeEventListener = function (event, fn) {\n                if (typeof fn === 'function' && innerRef.current) {\n                    innerRef.current.removeEventListener(event, fn);\n                }\n            };\n            removeEventListener('glider-slide-visible', props.onSlideVisible);\n            removeEventListener('glider-loaded', props.onLoad);\n            removeEventListener('glider-animated', props.onAnimated);\n            removeEventListener('glider-remove', props.onRemove);\n            removeEventListener('glider-refresh', props.onRefresh);\n            removeEventListener('glider-add', props.onAdd);\n            removeEventListener('glider-destroy', props.onDestroy);\n            removeEventListener('glider-slide-hidden', props.onSlideHidden);\n            if (gliderRef.current) {\n                gliderRef.current.destroy();\n            }\n        };\n    }, []);\n    // When the props update, update the glider\n    React.useEffect(function () {\n        if (!gliderRef.current) {\n            return;\n        }\n        gliderRef.current.setOption(makeGliderOptions(), true);\n        gliderRef.current.refresh(true);\n    }, [props]);\n    // Expose the glider instance to the user so they can call the methods too\n    React.useImperativeHandle(ref, function () { return gliderRef.current; });\n    return (React.createElement(\"div\", { className: \"glider-contain\" },\n        props.hasArrows && !props.arrows && (React.createElement(\"button\", { role: \"button\", className: \"glider-prev\", id: \"glider-prev\" }, props.iconLeft || '«')),\n        React.createElement(\"div\", { className: props.className, ref: innerRef }, props.children),\n        props.hasDots && !props.dots && (React.createElement(\"div\", { id: \"dots\", className: \"glider-dots\" })),\n        props.hasArrows && !props.arrows && (React.createElement(\"button\", { role: \"button\", className: \"glider-next\", id: \"glider-next\" }, props.iconRight || '»'))));\n});\nexports[\"default\"] = GliderComponent;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-glider/dist/index.js\n"));

/***/ })

}]);